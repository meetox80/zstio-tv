// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  name        String   @unique
  password    String?
  permissions Int      @default(0)
  createdAt   DateTime @default(now())
}

model GlobalSettings {
  id         Int @id @default(1)
  lessonTime Int @default(45)
}

model Spotify {
  id           Int   @id @default(1)
  accessToken  String
  refreshToken String
  expiresAt    BigInt
}

model widgetsdata {
  id          Int    @id @default(1)
  widget_text String @default("Przypominamy, że obowiązuje całkowity zakaz opuszczania terenu szkoły podczas zajęć i przerw międzylekcyjnych.")
}

model Slide {
  Id        String   @id @default(cuid())
  Name      String
  ImageData String
  Duration  Int      @default(5)
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model SongProposal {
  Id          String   @id @default(cuid())
  TrackId     String
  Title       String
  Artist      String
  Album       String
  AlbumArt    String
  Duration    Int
  Uri         String
  Fingerprint String?
  CreatedAt   DateTime @default(now())
  UpdatedAt   DateTime @updatedAt
  Votes       Vote[]   @relation("ProposalVotes")
}

model ApprovedSong {
  Id        String   @id @default(cuid())
  TrackId   String
  Title     String
  Artist    String
  Album     String
  AlbumArt  String
  Duration  Int
  Uri       String
  Upvotes   Int      @default(0)
  Downvotes Int      @default(0)
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
  Votes     Vote[]   @relation("ApprovedVotes")
}

model Vote {
  Id             String        @id @default(cuid())
  SongProposalId String?
  SongProposal   SongProposal? @relation("ProposalVotes", fields: [SongProposalId], references: [Id])
  ApprovedSongId String?
  ApprovedSong   ApprovedSong? @relation("ApprovedVotes", fields: [ApprovedSongId], references: [Id])
  Fingerprint    String
  IsUpvote       Boolean
  CreatedAt      DateTime      @default(now())

  @@unique([SongProposalId, Fingerprint])
  @@unique([ApprovedSongId, Fingerprint])
}

model Statistics {
  Id           String   @id @default(cuid())
  Date         String   @unique
  SpotifyPlays Int      @default(0)
  SongRequests Int      @default(0)
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
}
